// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bgs/low/pb/client/game_utilities_service.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = Google.Protobuf;
using pbc = Google.Protobuf.Collections;
using pbr = Google.Protobuf.Reflection;
namespace Bgs.Protocol.GameUtilities.V1
{
    /// <summary>Holder for reflection information generated from bgs/low/pb/client/game_utilities_service.proto</summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class GameUtilitiesServiceReflection
    {

        #region Descriptor
        /// <summary>File descriptor for bgs/low/pb/client/game_utilities_service.proto</summary>
        public static pbr::FileDescriptor Descriptor
        {
            get { return descriptor; }
        }
        private static pbr::FileDescriptor descriptor;

        static GameUtilitiesServiceReflection()
        {
            byte[] descriptorData = System.Convert.FromBase64String(
                string.Concat(
                  "Ci5iZ3MvbG93L3BiL2NsaWVudC9nYW1lX3V0aWxpdGllc19zZXJ2aWNlLnBy",
                  "b3RvEh5iZ3MucHJvdG9jb2wuZ2FtZV91dGlsaXRpZXMudjEaJ2Jncy9sb3cv",
                  "cGIvY2xpZW50L2F0dHJpYnV0ZV90eXBlcy5wcm90bxosYmdzL2xvdy9wYi9j",
                  "bGllbnQvY29udGVudF9oYW5kbGVfdHlwZXMucHJvdG8aJGJncy9sb3cvcGIv",
                  "Y2xpZW50L2VudGl0eV90eXBlcy5wcm90bxosYmdzL2xvdy9wYi9jbGllbnQv",
                  "Z2FtZV91dGlsaXRpZXNfdHlwZXMucHJvdG8aIWJncy9sb3cvcGIvY2xpZW50",
                  "L3JwY190eXBlcy5wcm90byKRAgoNQ2xpZW50UmVxdWVzdBIqCglhdHRyaWJ1",
                  "dGUYASADKAsyFy5iZ3MucHJvdG9jb2wuQXR0cmlidXRlEiUKBGhvc3QYAiAB",
                  "KAsyFy5iZ3MucHJvdG9jb2wuUHJvY2Vzc0lkEioKCmFjY291bnRfaWQYAyAB",
                  "KAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5SWQSLwoPZ2FtZV9hY2NvdW50X2lk",
                  "GAQgASgLMhYuYmdzLnByb3RvY29sLkVudGl0eUlkEg8KB3Byb2dyYW0YBSAB",
                  "KAcSPwoLY2xpZW50X2luZm8YBiABKAsyKi5iZ3MucHJvdG9jb2wuZ2FtZV91",
                  "dGlsaXRpZXMudjEuQ2xpZW50SW5mbyI8Cg5DbGllbnRSZXNwb25zZRIqCglh",
                  "dHRyaWJ1dGUYASADKAsyFy5iZ3MucHJvdG9jb2wuQXR0cmlidXRlInMKDVNl",
                  "cnZlclJlcXVlc3QSKgoJYXR0cmlidXRlGAEgAygLMhcuYmdzLnByb3RvY29s",
                  "LkF0dHJpYnV0ZRIPCgdwcm9ncmFtGAIgASgHEiUKBGhvc3QYAyABKAsyFy5i",
                  "Z3MucHJvdG9jb2wuUHJvY2Vzc0lkIjwKDlNlcnZlclJlc3BvbnNlEioKCWF0",
                  "dHJpYnV0ZRgBIAMoCzIXLmJncy5wcm90b2NvbC5BdHRyaWJ1dGUixwEKHVBy",
                  "ZXNlbmNlQ2hhbm5lbENyZWF0ZWRSZXF1ZXN0EiIKAmlkGAEgASgLMhYuYmdz",
                  "LnByb3RvY29sLkVudGl0eUlkEi8KD2dhbWVfYWNjb3VudF9pZBgDIAEoCzIW",
                  "LmJncy5wcm90b2NvbC5FbnRpdHlJZBIqCgphY2NvdW50X2lkGAQgASgLMhYu",
                  "YmdzLnByb3RvY29sLkVudGl0eUlkEiUKBGhvc3QYBSABKAsyFy5iZ3MucHJv",
                  "dG9jb2wuUHJvY2Vzc0lkIo0BChlHZXRQbGF5ZXJWYXJpYWJsZXNSZXF1ZXN0",
                  "EkkKEHBsYXllcl92YXJpYWJsZXMYASADKAsyLy5iZ3MucHJvdG9jb2wuZ2Ft",
                  "ZV91dGlsaXRpZXMudjEuUGxheWVyVmFyaWFibGVzEiUKBGhvc3QYAiABKAsy",
                  "Fy5iZ3MucHJvdG9jb2wuUHJvY2Vzc0lkImcKGkdldFBsYXllclZhcmlhYmxl",
                  "c1Jlc3BvbnNlEkkKEHBsYXllcl92YXJpYWJsZXMYASADKAsyLy5iZ3MucHJv",
                  "dG9jb2wuZ2FtZV91dGlsaXRpZXMudjEuUGxheWVyVmFyaWFibGVzIosBCh1H",
                  "YW1lQWNjb3VudE9ubGluZU5vdGlmaWNhdGlvbhIvCg9nYW1lX2FjY291bnRf",
                  "aWQYASABKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5SWQSJQoEaG9zdBgCIAEo",
                  "CzIXLmJncy5wcm90b2NvbC5Qcm9jZXNzSWQSEgoKc2Vzc2lvbl9pZBgDIAEo",
                  "CSKMAQoeR2FtZUFjY291bnRPZmZsaW5lTm90aWZpY2F0aW9uEi8KD2dhbWVf",
                  "YWNjb3VudF9pZBgBIAEoCzIWLmJncy5wcm90b2NvbC5FbnRpdHlJZBIlCgRo",
                  "b3N0GAIgASgLMhcuYmdzLnByb3RvY29sLlByb2Nlc3NJZBISCgpzZXNzaW9u",
                  "X2lkGAMgASgJIkMKGkdldEFjaGlldmVtZW50c0ZpbGVSZXF1ZXN0EiUKBGhv",
                  "c3QYASABKAsyFy5iZ3MucHJvdG9jb2wuUHJvY2Vzc0lkIlIKG0dldEFjaGll",
                  "dmVtZW50c0ZpbGVSZXNwb25zZRIzCg5jb250ZW50X2hhbmRsZRgBIAEoCzIb",
                  "LmJncy5wcm90b2NvbC5Db250ZW50SGFuZGxlInMKH0dldEFsbFZhbHVlc0Zv",
                  "ckF0dHJpYnV0ZVJlcXVlc3QSFQoNYXR0cmlidXRlX2tleRgBIAEoCRIoCghh",
                  "Z2VudF9pZBgCIAEoCzIWLmJncy5wcm90b2NvbC5FbnRpdHlJZBIPCgdwcm9n",
                  "cmFtGAUgASgHIlIKIEdldEFsbFZhbHVlc0ZvckF0dHJpYnV0ZVJlc3BvbnNl",
                  "Ei4KD2F0dHJpYnV0ZV92YWx1ZRgBIAMoCzIVLmJncy5wcm90b2NvbC5WYXJp",
                  "YW50MpYIChRHYW1lVXRpbGl0aWVzU2VydmljZRJ1ChRQcm9jZXNzQ2xpZW50",
                  "UmVxdWVzdBItLmJncy5wcm90b2NvbC5nYW1lX3V0aWxpdGllcy52MS5DbGll",
                  "bnRSZXF1ZXN0Gi4uYmdzLnByb3RvY29sLmdhbWVfdXRpbGl0aWVzLnYxLkNs",
                  "aWVudFJlc3BvbnNlEm0KFlByZXNlbmNlQ2hhbm5lbENyZWF0ZWQSPS5iZ3Mu",
                  "cHJvdG9jb2wuZ2FtZV91dGlsaXRpZXMudjEuUHJlc2VuY2VDaGFubmVsQ3Jl",
                  "YXRlZFJlcXVlc3QaFC5iZ3MucHJvdG9jb2wuTm9EYXRhEosBChJHZXRQbGF5",
                  "ZXJWYXJpYWJsZXMSOS5iZ3MucHJvdG9jb2wuZ2FtZV91dGlsaXRpZXMudjEu",
                  "R2V0UGxheWVyVmFyaWFibGVzUmVxdWVzdBo6LmJncy5wcm90b2NvbC5nYW1l",
                  "X3V0aWxpdGllcy52MS5HZXRQbGF5ZXJWYXJpYWJsZXNSZXNwb25zZRJ1ChRQ",
                  "cm9jZXNzU2VydmVyUmVxdWVzdBItLmJncy5wcm90b2NvbC5nYW1lX3V0aWxp",
                  "dGllcy52MS5TZXJ2ZXJSZXF1ZXN0Gi4uYmdzLnByb3RvY29sLmdhbWVfdXRp",
                  "bGl0aWVzLnYxLlNlcnZlclJlc3BvbnNlEm8KE09uR2FtZUFjY291bnRPbmxp",
                  "bmUSPS5iZ3MucHJvdG9jb2wuZ2FtZV91dGlsaXRpZXMudjEuR2FtZUFjY291",
                  "bnRPbmxpbmVOb3RpZmljYXRpb24aGS5iZ3MucHJvdG9jb2wuTk9fUkVTUE9O",
                  "U0UScQoUT25HYW1lQWNjb3VudE9mZmxpbmUSPi5iZ3MucHJvdG9jb2wuZ2Ft",
                  "ZV91dGlsaXRpZXMudjEuR2FtZUFjY291bnRPZmZsaW5lTm90aWZpY2F0aW9u",
                  "GhkuYmdzLnByb3RvY29sLk5PX1JFU1BPTlNFEo4BChNHZXRBY2hpZXZlbWVu",
                  "dHNGaWxlEjouYmdzLnByb3RvY29sLmdhbWVfdXRpbGl0aWVzLnYxLkdldEFj",
                  "aGlldmVtZW50c0ZpbGVSZXF1ZXN0GjsuYmdzLnByb3RvY29sLmdhbWVfdXRp",
                  "bGl0aWVzLnYxLkdldEFjaGlldmVtZW50c0ZpbGVSZXNwb25zZRKdAQoYR2V0",
                  "QWxsVmFsdWVzRm9yQXR0cmlidXRlEj8uYmdzLnByb3RvY29sLmdhbWVfdXRp",
                  "bGl0aWVzLnYxLkdldEFsbFZhbHVlc0ZvckF0dHJpYnV0ZVJlcXVlc3QaQC5i",
                  "Z3MucHJvdG9jb2wuZ2FtZV91dGlsaXRpZXMudjEuR2V0QWxsVmFsdWVzRm9y",
                  "QXR0cmlidXRlUmVzcG9uc2VCRAofYm5ldC5wcm90b2NvbC5nYW1lX3V0aWxp",
                  "dGllcy52MUIZR2FtZVV0aWxpdGllc1NlcnZpY2VQcm90b0gCgAEAiAEBYgZw",
                  "cm90bzM="));
            descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
                new pbr::FileDescriptor[] { Bgs.Protocol.AttributeTypesReflection.Descriptor, Bgs.Protocol.ContentHandleTypesReflection.Descriptor, Bgs.Protocol.EntityTypesReflection.Descriptor, Bgs.Protocol.GameUtilities.V1.GameUtilitiesTypesReflection.Descriptor, Bgs.Protocol.RpcTypesReflection.Descriptor, },
                new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(Bgs.Protocol.GameUtilities.V1.ClientRequest), Bgs.Protocol.GameUtilities.V1.ClientRequest.Parser, new[]{ "Attribute", "Host", "AccountId", "GameAccountId", "Program", "ClientInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(Bgs.Protocol.GameUtilities.V1.ClientResponse), Bgs.Protocol.GameUtilities.V1.ClientResponse.Parser, new[]{ "Attribute" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(Bgs.Protocol.GameUtilities.V1.ServerRequest), Bgs.Protocol.GameUtilities.V1.ServerRequest.Parser, new[]{ "Attribute", "Program", "Host" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(Bgs.Protocol.GameUtilities.V1.ServerResponse), Bgs.Protocol.GameUtilities.V1.ServerResponse.Parser, new[]{ "Attribute" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(Bgs.Protocol.GameUtilities.V1.PresenceChannelCreatedRequest), Bgs.Protocol.GameUtilities.V1.PresenceChannelCreatedRequest.Parser, new[]{ "Id", "GameAccountId", "AccountId", "Host" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(Bgs.Protocol.GameUtilities.V1.GetPlayerVariablesRequest), Bgs.Protocol.GameUtilities.V1.GetPlayerVariablesRequest.Parser, new[]{ "PlayerVariables", "Host" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(Bgs.Protocol.GameUtilities.V1.GetPlayerVariablesResponse), Bgs.Protocol.GameUtilities.V1.GetPlayerVariablesResponse.Parser, new[]{ "PlayerVariables" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(Bgs.Protocol.GameUtilities.V1.GameAccountOnlineNotification), Bgs.Protocol.GameUtilities.V1.GameAccountOnlineNotification.Parser, new[]{ "GameAccountId", "Host", "SessionId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(Bgs.Protocol.GameUtilities.V1.GameAccountOfflineNotification), Bgs.Protocol.GameUtilities.V1.GameAccountOfflineNotification.Parser, new[]{ "GameAccountId", "Host", "SessionId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(Bgs.Protocol.GameUtilities.V1.GetAchievementsFileRequest), Bgs.Protocol.GameUtilities.V1.GetAchievementsFileRequest.Parser, new[]{ "Host" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(Bgs.Protocol.GameUtilities.V1.GetAchievementsFileResponse), Bgs.Protocol.GameUtilities.V1.GetAchievementsFileResponse.Parser, new[]{ "ContentHandle" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(Bgs.Protocol.GameUtilities.V1.GetAllValuesForAttributeRequest), Bgs.Protocol.GameUtilities.V1.GetAllValuesForAttributeRequest.Parser, new[]{ "AttributeKey", "AgentId", "Program" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(Bgs.Protocol.GameUtilities.V1.GetAllValuesForAttributeResponse), Bgs.Protocol.GameUtilities.V1.GetAllValuesForAttributeResponse.Parser, new[]{ "AttributeValue" }, null, null, null)
                }));
        }
        #endregion

    }
    #region Messages
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class ClientRequest : pb::IMessage<ClientRequest>
    {
        private static readonly pb::MessageParser<ClientRequest> _parser = new pb::MessageParser<ClientRequest>(() => new ClientRequest());
        public static pb::MessageParser<ClientRequest> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor
        {
            get { return Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[0]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        public ClientRequest()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        public ClientRequest(ClientRequest other) : this()
        {
            attribute_ = other.attribute_.Clone();
            Host = other.host_ != null ? other.Host.Clone() : null;
            AccountId = other.accountId_ != null ? other.AccountId.Clone() : null;
            GameAccountId = other.gameAccountId_ != null ? other.GameAccountId.Clone() : null;
            program_ = other.program_;
            ClientInfo = other.clientInfo_ != null ? other.ClientInfo.Clone() : null;
        }

        public ClientRequest Clone()
        {
            return new ClientRequest(this);
        }

        /// <summary>Field number for the "attribute" field.</summary>
        public const int AttributeFieldNumber = 1;
        private static readonly pb::FieldCodec<Bgs.Protocol.Attribute> _repeated_attribute_codec
            = pb::FieldCodec.ForMessage(10, Bgs.Protocol.Attribute.Parser);
        private readonly pbc::RepeatedField<Bgs.Protocol.Attribute> attribute_ = new pbc::RepeatedField<Bgs.Protocol.Attribute>();
        public pbc::RepeatedField<Bgs.Protocol.Attribute> Attribute
        {
            get { return attribute_; }
        }

        /// <summary>Field number for the "host" field.</summary>
        public const int HostFieldNumber = 2;
        private Bgs.Protocol.ProcessId host_;
        public Bgs.Protocol.ProcessId Host
        {
            get { return host_; }
            set
            {
                host_ = value;
            }
        }

        /// <summary>Field number for the "account_id" field.</summary>
        public const int AccountIdFieldNumber = 3;
        private Bgs.Protocol.EntityId accountId_;
        public Bgs.Protocol.EntityId AccountId
        {
            get { return accountId_; }
            set
            {
                accountId_ = value;
            }
        }

        /// <summary>Field number for the "game_account_id" field.</summary>
        public const int GameAccountIdFieldNumber = 4;
        private Bgs.Protocol.EntityId gameAccountId_;
        public Bgs.Protocol.EntityId GameAccountId
        {
            get { return gameAccountId_; }
            set
            {
                gameAccountId_ = value;
            }
        }

        /// <summary>Field number for the "program" field.</summary>
        public const int ProgramFieldNumber = 5;
        private uint program_;
        public uint Program
        {
            get { return program_; }
            set
            {
                program_ = value;
            }
        }

        /// <summary>Field number for the "client_info" field.</summary>
        public const int ClientInfoFieldNumber = 6;
        private Bgs.Protocol.GameUtilities.V1.ClientInfo clientInfo_;
        public Bgs.Protocol.GameUtilities.V1.ClientInfo ClientInfo
        {
            get { return clientInfo_; }
            set
            {
                clientInfo_ = value;
            }
        }

        public override bool Equals(object other)
        {
            return Equals(other as ClientRequest);
        }

        public bool Equals(ClientRequest other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!attribute_.Equals(other.attribute_)) return false;
            if (!object.Equals(Host, other.Host)) return false;
            if (!object.Equals(AccountId, other.AccountId)) return false;
            if (!object.Equals(GameAccountId, other.GameAccountId)) return false;
            if (Program != other.Program) return false;
            if (!object.Equals(ClientInfo, other.ClientInfo)) return false;
            return true;
        }

        public override int GetHashCode()
        {
            int hash = 1;
            hash ^= attribute_.GetHashCode();
            if (host_ != null) hash ^= Host.GetHashCode();
            if (accountId_ != null) hash ^= AccountId.GetHashCode();
            if (gameAccountId_ != null) hash ^= GameAccountId.GetHashCode();
            if (Program != 0) hash ^= Program.GetHashCode();
            if (clientInfo_ != null) hash ^= ClientInfo.GetHashCode();
            return hash;
        }

        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output)
        {
            attribute_.WriteTo(output, _repeated_attribute_codec);
            if (host_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(Host);
            }
            if (accountId_ != null)
            {
                output.WriteRawTag(26);
                output.WriteMessage(AccountId);
            }
            if (gameAccountId_ != null)
            {
                output.WriteRawTag(34);
                output.WriteMessage(GameAccountId);
            }
            if (Program != 0)
            {
                output.WriteRawTag(45);
                output.WriteFixed32(Program);
            }
            if (clientInfo_ != null)
            {
                output.WriteRawTag(50);
                output.WriteMessage(ClientInfo);
            }
        }

        public int CalculateSize()
        {
            int size = 0;
            size += attribute_.CalculateSize(_repeated_attribute_codec);
            if (host_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Host);
            }
            if (accountId_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountId);
            }
            if (gameAccountId_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameAccountId);
            }
            if (Program != 0)
            {
                size += 1 + 4;
            }
            if (clientInfo_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientInfo);
            }
            return size;
        }

        public void MergeFrom(ClientRequest other)
        {
            if (other == null)
            {
                return;
            }
            attribute_.Add(other.attribute_);
            if (other.host_ != null)
            {
                if (host_ == null)
                {
                    host_ = new Bgs.Protocol.ProcessId();
                }
                Host.MergeFrom(other.Host);
            }
            if (other.accountId_ != null)
            {
                if (accountId_ == null)
                {
                    accountId_ = new Bgs.Protocol.EntityId();
                }
                AccountId.MergeFrom(other.AccountId);
            }
            if (other.gameAccountId_ != null)
            {
                if (gameAccountId_ == null)
                {
                    gameAccountId_ = new Bgs.Protocol.EntityId();
                }
                GameAccountId.MergeFrom(other.GameAccountId);
            }
            if (other.Program != 0)
            {
                Program = other.Program;
            }
            if (other.clientInfo_ != null)
            {
                if (clientInfo_ == null)
                {
                    clientInfo_ = new Bgs.Protocol.GameUtilities.V1.ClientInfo();
                }
                ClientInfo.MergeFrom(other.ClientInfo);
            }
        }

        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                        {
                            attribute_.AddEntriesFrom(input, _repeated_attribute_codec);
                            break;
                        }
                    case 18:
                        {
                            if (host_ == null)
                            {
                                host_ = new Bgs.Protocol.ProcessId();
                            }
                            input.ReadMessage(host_);
                            break;
                        }
                    case 26:
                        {
                            if (accountId_ == null)
                            {
                                accountId_ = new Bgs.Protocol.EntityId();
                            }
                            input.ReadMessage(accountId_);
                            break;
                        }
                    case 34:
                        {
                            if (gameAccountId_ == null)
                            {
                                gameAccountId_ = new Bgs.Protocol.EntityId();
                            }
                            input.ReadMessage(gameAccountId_);
                            break;
                        }
                    case 45:
                        {
                            Program = input.ReadFixed32();
                            break;
                        }
                    case 50:
                        {
                            if (clientInfo_ == null)
                            {
                                clientInfo_ = new Bgs.Protocol.GameUtilities.V1.ClientInfo();
                            }
                            input.ReadMessage(clientInfo_);
                            break;
                        }
                }
            }
        }

    }

    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class ClientResponse : pb::IMessage<ClientResponse>
    {
        private static readonly pb::MessageParser<ClientResponse> _parser = new pb::MessageParser<ClientResponse>(() => new ClientResponse());
        public static pb::MessageParser<ClientResponse> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor
        {
            get { return Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[1]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        public ClientResponse()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        public ClientResponse(ClientResponse other) : this()
        {
            attribute_ = other.attribute_.Clone();
        }

        public ClientResponse Clone()
        {
            return new ClientResponse(this);
        }

        /// <summary>Field number for the "attribute" field.</summary>
        public const int AttributeFieldNumber = 1;
        private static readonly pb::FieldCodec<Bgs.Protocol.Attribute> _repeated_attribute_codec
            = pb::FieldCodec.ForMessage(10, Bgs.Protocol.Attribute.Parser);
        private readonly pbc::RepeatedField<Bgs.Protocol.Attribute> attribute_ = new pbc::RepeatedField<Bgs.Protocol.Attribute>();
        public pbc::RepeatedField<Bgs.Protocol.Attribute> Attribute
        {
            get { return attribute_; }
        }

        public override bool Equals(object other)
        {
            return Equals(other as ClientResponse);
        }

        public bool Equals(ClientResponse other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!attribute_.Equals(other.attribute_)) return false;
            return true;
        }

        public override int GetHashCode()
        {
            int hash = 1;
            hash ^= attribute_.GetHashCode();
            return hash;
        }

        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output)
        {
            attribute_.WriteTo(output, _repeated_attribute_codec);
        }

        public int CalculateSize()
        {
            int size = 0;
            size += attribute_.CalculateSize(_repeated_attribute_codec);
            return size;
        }

        public void MergeFrom(ClientResponse other)
        {
            if (other == null)
            {
                return;
            }
            attribute_.Add(other.attribute_);
        }

        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                        {
                            attribute_.AddEntriesFrom(input, _repeated_attribute_codec);
                            break;
                        }
                }
            }
        }

    }

    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class ServerRequest : pb::IMessage<ServerRequest>
    {
        private static readonly pb::MessageParser<ServerRequest> _parser = new pb::MessageParser<ServerRequest>(() => new ServerRequest());
        public static pb::MessageParser<ServerRequest> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor
        {
            get { return Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[2]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        public ServerRequest()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        public ServerRequest(ServerRequest other) : this()
        {
            attribute_ = other.attribute_.Clone();
            program_ = other.program_;
            Host = other.host_ != null ? other.Host.Clone() : null;
        }

        public ServerRequest Clone()
        {
            return new ServerRequest(this);
        }

        /// <summary>Field number for the "attribute" field.</summary>
        public const int AttributeFieldNumber = 1;
        private static readonly pb::FieldCodec<Bgs.Protocol.Attribute> _repeated_attribute_codec
            = pb::FieldCodec.ForMessage(10, Bgs.Protocol.Attribute.Parser);
        private readonly pbc::RepeatedField<Bgs.Protocol.Attribute> attribute_ = new pbc::RepeatedField<Bgs.Protocol.Attribute>();
        public pbc::RepeatedField<Bgs.Protocol.Attribute> Attribute
        {
            get { return attribute_; }
        }

        /// <summary>Field number for the "program" field.</summary>
        public const int ProgramFieldNumber = 2;
        private uint program_;
        public uint Program
        {
            get { return program_; }
            set
            {
                program_ = value;
            }
        }

        /// <summary>Field number for the "host" field.</summary>
        public const int HostFieldNumber = 3;
        private Bgs.Protocol.ProcessId host_;
        public Bgs.Protocol.ProcessId Host
        {
            get { return host_; }
            set
            {
                host_ = value;
            }
        }

        public override bool Equals(object other)
        {
            return Equals(other as ServerRequest);
        }

        public bool Equals(ServerRequest other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!attribute_.Equals(other.attribute_)) return false;
            if (Program != other.Program) return false;
            if (!object.Equals(Host, other.Host)) return false;
            return true;
        }

        public override int GetHashCode()
        {
            int hash = 1;
            hash ^= attribute_.GetHashCode();
            if (Program != 0) hash ^= Program.GetHashCode();
            if (host_ != null) hash ^= Host.GetHashCode();
            return hash;
        }

        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output)
        {
            attribute_.WriteTo(output, _repeated_attribute_codec);
            if (Program != 0)
            {
                output.WriteRawTag(21);
                output.WriteFixed32(Program);
            }
            if (host_ != null)
            {
                output.WriteRawTag(26);
                output.WriteMessage(Host);
            }
        }

        public int CalculateSize()
        {
            int size = 0;
            size += attribute_.CalculateSize(_repeated_attribute_codec);
            if (Program != 0)
            {
                size += 1 + 4;
            }
            if (host_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Host);
            }
            return size;
        }

        public void MergeFrom(ServerRequest other)
        {
            if (other == null)
            {
                return;
            }
            attribute_.Add(other.attribute_);
            if (other.Program != 0)
            {
                Program = other.Program;
            }
            if (other.host_ != null)
            {
                if (host_ == null)
                {
                    host_ = new Bgs.Protocol.ProcessId();
                }
                Host.MergeFrom(other.Host);
            }
        }

        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                        {
                            attribute_.AddEntriesFrom(input, _repeated_attribute_codec);
                            break;
                        }
                    case 21:
                        {
                            Program = input.ReadFixed32();
                            break;
                        }
                    case 26:
                        {
                            if (host_ == null)
                            {
                                host_ = new Bgs.Protocol.ProcessId();
                            }
                            input.ReadMessage(host_);
                            break;
                        }
                }
            }
        }

    }

    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class ServerResponse : pb::IMessage<ServerResponse>
    {
        private static readonly pb::MessageParser<ServerResponse> _parser = new pb::MessageParser<ServerResponse>(() => new ServerResponse());
        public static pb::MessageParser<ServerResponse> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor
        {
            get { return Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[3]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        public ServerResponse()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        public ServerResponse(ServerResponse other) : this()
        {
            attribute_ = other.attribute_.Clone();
        }

        public ServerResponse Clone()
        {
            return new ServerResponse(this);
        }

        /// <summary>Field number for the "attribute" field.</summary>
        public const int AttributeFieldNumber = 1;
        private static readonly pb::FieldCodec<Bgs.Protocol.Attribute> _repeated_attribute_codec
            = pb::FieldCodec.ForMessage(10, Bgs.Protocol.Attribute.Parser);
        private readonly pbc::RepeatedField<Bgs.Protocol.Attribute> attribute_ = new pbc::RepeatedField<Bgs.Protocol.Attribute>();
        public pbc::RepeatedField<Bgs.Protocol.Attribute> Attribute
        {
            get { return attribute_; }
        }

        public override bool Equals(object other)
        {
            return Equals(other as ServerResponse);
        }

        public bool Equals(ServerResponse other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!attribute_.Equals(other.attribute_)) return false;
            return true;
        }

        public override int GetHashCode()
        {
            int hash = 1;
            hash ^= attribute_.GetHashCode();
            return hash;
        }

        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output)
        {
            attribute_.WriteTo(output, _repeated_attribute_codec);
        }

        public int CalculateSize()
        {
            int size = 0;
            size += attribute_.CalculateSize(_repeated_attribute_codec);
            return size;
        }

        public void MergeFrom(ServerResponse other)
        {
            if (other == null)
            {
                return;
            }
            attribute_.Add(other.attribute_);
        }

        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                        {
                            attribute_.AddEntriesFrom(input, _repeated_attribute_codec);
                            break;
                        }
                }
            }
        }

    }

    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class PresenceChannelCreatedRequest : pb::IMessage<PresenceChannelCreatedRequest>
    {
        private static readonly pb::MessageParser<PresenceChannelCreatedRequest> _parser = new pb::MessageParser<PresenceChannelCreatedRequest>(() => new PresenceChannelCreatedRequest());
        public static pb::MessageParser<PresenceChannelCreatedRequest> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor
        {
            get { return Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[4]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        public PresenceChannelCreatedRequest()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        public PresenceChannelCreatedRequest(PresenceChannelCreatedRequest other) : this()
        {
            Id = other.id_ != null ? other.Id.Clone() : null;
            GameAccountId = other.gameAccountId_ != null ? other.GameAccountId.Clone() : null;
            AccountId = other.accountId_ != null ? other.AccountId.Clone() : null;
            Host = other.host_ != null ? other.Host.Clone() : null;
        }

        public PresenceChannelCreatedRequest Clone()
        {
            return new PresenceChannelCreatedRequest(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private Bgs.Protocol.EntityId id_;
        public Bgs.Protocol.EntityId Id
        {
            get { return id_; }
            set
            {
                id_ = value;
            }
        }

        /// <summary>Field number for the "game_account_id" field.</summary>
        public const int GameAccountIdFieldNumber = 3;
        private Bgs.Protocol.EntityId gameAccountId_;
        public Bgs.Protocol.EntityId GameAccountId
        {
            get { return gameAccountId_; }
            set
            {
                gameAccountId_ = value;
            }
        }

        /// <summary>Field number for the "account_id" field.</summary>
        public const int AccountIdFieldNumber = 4;
        private Bgs.Protocol.EntityId accountId_;
        public Bgs.Protocol.EntityId AccountId
        {
            get { return accountId_; }
            set
            {
                accountId_ = value;
            }
        }

        /// <summary>Field number for the "host" field.</summary>
        public const int HostFieldNumber = 5;
        private Bgs.Protocol.ProcessId host_;
        public Bgs.Protocol.ProcessId Host
        {
            get { return host_; }
            set
            {
                host_ = value;
            }
        }

        public override bool Equals(object other)
        {
            return Equals(other as PresenceChannelCreatedRequest);
        }

        public bool Equals(PresenceChannelCreatedRequest other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(Id, other.Id)) return false;
            if (!object.Equals(GameAccountId, other.GameAccountId)) return false;
            if (!object.Equals(AccountId, other.AccountId)) return false;
            if (!object.Equals(Host, other.Host)) return false;
            return true;
        }

        public override int GetHashCode()
        {
            int hash = 1;
            if (id_ != null) hash ^= Id.GetHashCode();
            if (gameAccountId_ != null) hash ^= GameAccountId.GetHashCode();
            if (accountId_ != null) hash ^= AccountId.GetHashCode();
            if (host_ != null) hash ^= Host.GetHashCode();
            return hash;
        }

        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output)
        {
            if (id_ != null)
            {
                output.WriteRawTag(10);
                output.WriteMessage(Id);
            }
            if (gameAccountId_ != null)
            {
                output.WriteRawTag(26);
                output.WriteMessage(GameAccountId);
            }
            if (accountId_ != null)
            {
                output.WriteRawTag(34);
                output.WriteMessage(AccountId);
            }
            if (host_ != null)
            {
                output.WriteRawTag(42);
                output.WriteMessage(Host);
            }
        }

        public int CalculateSize()
        {
            int size = 0;
            if (id_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
            }
            if (gameAccountId_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameAccountId);
            }
            if (accountId_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountId);
            }
            if (host_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Host);
            }
            return size;
        }

        public void MergeFrom(PresenceChannelCreatedRequest other)
        {
            if (other == null)
            {
                return;
            }
            if (other.id_ != null)
            {
                if (id_ == null)
                {
                    id_ = new Bgs.Protocol.EntityId();
                }
                Id.MergeFrom(other.Id);
            }
            if (other.gameAccountId_ != null)
            {
                if (gameAccountId_ == null)
                {
                    gameAccountId_ = new Bgs.Protocol.EntityId();
                }
                GameAccountId.MergeFrom(other.GameAccountId);
            }
            if (other.accountId_ != null)
            {
                if (accountId_ == null)
                {
                    accountId_ = new Bgs.Protocol.EntityId();
                }
                AccountId.MergeFrom(other.AccountId);
            }
            if (other.host_ != null)
            {
                if (host_ == null)
                {
                    host_ = new Bgs.Protocol.ProcessId();
                }
                Host.MergeFrom(other.Host);
            }
        }

        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                        {
                            if (id_ == null)
                            {
                                id_ = new Bgs.Protocol.EntityId();
                            }
                            input.ReadMessage(id_);
                            break;
                        }
                    case 26:
                        {
                            if (gameAccountId_ == null)
                            {
                                gameAccountId_ = new Bgs.Protocol.EntityId();
                            }
                            input.ReadMessage(gameAccountId_);
                            break;
                        }
                    case 34:
                        {
                            if (accountId_ == null)
                            {
                                accountId_ = new Bgs.Protocol.EntityId();
                            }
                            input.ReadMessage(accountId_);
                            break;
                        }
                    case 42:
                        {
                            if (host_ == null)
                            {
                                host_ = new Bgs.Protocol.ProcessId();
                            }
                            input.ReadMessage(host_);
                            break;
                        }
                }
            }
        }

    }

    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class GetPlayerVariablesRequest : pb::IMessage<GetPlayerVariablesRequest>
    {
        private static readonly pb::MessageParser<GetPlayerVariablesRequest> _parser = new pb::MessageParser<GetPlayerVariablesRequest>(() => new GetPlayerVariablesRequest());
        public static pb::MessageParser<GetPlayerVariablesRequest> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor
        {
            get { return Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[5]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        public GetPlayerVariablesRequest()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        public GetPlayerVariablesRequest(GetPlayerVariablesRequest other) : this()
        {
            playerVariables_ = other.playerVariables_.Clone();
            Host = other.host_ != null ? other.Host.Clone() : null;
        }

        public GetPlayerVariablesRequest Clone()
        {
            return new GetPlayerVariablesRequest(this);
        }

        /// <summary>Field number for the "player_variables" field.</summary>
        public const int PlayerVariablesFieldNumber = 1;
        private static readonly pb::FieldCodec<Bgs.Protocol.GameUtilities.V1.PlayerVariables> _repeated_playerVariables_codec
            = pb::FieldCodec.ForMessage(10, Bgs.Protocol.GameUtilities.V1.PlayerVariables.Parser);
        private readonly pbc::RepeatedField<Bgs.Protocol.GameUtilities.V1.PlayerVariables> playerVariables_ = new pbc::RepeatedField<Bgs.Protocol.GameUtilities.V1.PlayerVariables>();
        public pbc::RepeatedField<Bgs.Protocol.GameUtilities.V1.PlayerVariables> PlayerVariables
        {
            get { return playerVariables_; }
        }

        /// <summary>Field number for the "host" field.</summary>
        public const int HostFieldNumber = 2;
        private Bgs.Protocol.ProcessId host_;
        public Bgs.Protocol.ProcessId Host
        {
            get { return host_; }
            set
            {
                host_ = value;
            }
        }

        public override bool Equals(object other)
        {
            return Equals(other as GetPlayerVariablesRequest);
        }

        public bool Equals(GetPlayerVariablesRequest other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!playerVariables_.Equals(other.playerVariables_)) return false;
            if (!object.Equals(Host, other.Host)) return false;
            return true;
        }

        public override int GetHashCode()
        {
            int hash = 1;
            hash ^= playerVariables_.GetHashCode();
            if (host_ != null) hash ^= Host.GetHashCode();
            return hash;
        }

        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output)
        {
            playerVariables_.WriteTo(output, _repeated_playerVariables_codec);
            if (host_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(Host);
            }
        }

        public int CalculateSize()
        {
            int size = 0;
            size += playerVariables_.CalculateSize(_repeated_playerVariables_codec);
            if (host_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Host);
            }
            return size;
        }

        public void MergeFrom(GetPlayerVariablesRequest other)
        {
            if (other == null)
            {
                return;
            }
            playerVariables_.Add(other.playerVariables_);
            if (other.host_ != null)
            {
                if (host_ == null)
                {
                    host_ = new Bgs.Protocol.ProcessId();
                }
                Host.MergeFrom(other.Host);
            }
        }

        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                        {
                            playerVariables_.AddEntriesFrom(input, _repeated_playerVariables_codec);
                            break;
                        }
                    case 18:
                        {
                            if (host_ == null)
                            {
                                host_ = new Bgs.Protocol.ProcessId();
                            }
                            input.ReadMessage(host_);
                            break;
                        }
                }
            }
        }

    }

    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class GetPlayerVariablesResponse : pb::IMessage<GetPlayerVariablesResponse>
    {
        private static readonly pb::MessageParser<GetPlayerVariablesResponse> _parser = new pb::MessageParser<GetPlayerVariablesResponse>(() => new GetPlayerVariablesResponse());
        public static pb::MessageParser<GetPlayerVariablesResponse> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor
        {
            get { return Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[6]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        public GetPlayerVariablesResponse()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        public GetPlayerVariablesResponse(GetPlayerVariablesResponse other) : this()
        {
            playerVariables_ = other.playerVariables_.Clone();
        }

        public GetPlayerVariablesResponse Clone()
        {
            return new GetPlayerVariablesResponse(this);
        }

        /// <summary>Field number for the "player_variables" field.</summary>
        public const int PlayerVariablesFieldNumber = 1;
        private static readonly pb::FieldCodec<Bgs.Protocol.GameUtilities.V1.PlayerVariables> _repeated_playerVariables_codec
            = pb::FieldCodec.ForMessage(10, Bgs.Protocol.GameUtilities.V1.PlayerVariables.Parser);
        private readonly pbc::RepeatedField<Bgs.Protocol.GameUtilities.V1.PlayerVariables> playerVariables_ = new pbc::RepeatedField<Bgs.Protocol.GameUtilities.V1.PlayerVariables>();
        public pbc::RepeatedField<Bgs.Protocol.GameUtilities.V1.PlayerVariables> PlayerVariables
        {
            get { return playerVariables_; }
        }

        public override bool Equals(object other)
        {
            return Equals(other as GetPlayerVariablesResponse);
        }

        public bool Equals(GetPlayerVariablesResponse other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!playerVariables_.Equals(other.playerVariables_)) return false;
            return true;
        }

        public override int GetHashCode()
        {
            int hash = 1;
            hash ^= playerVariables_.GetHashCode();
            return hash;
        }

        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output)
        {
            playerVariables_.WriteTo(output, _repeated_playerVariables_codec);
        }

        public int CalculateSize()
        {
            int size = 0;
            size += playerVariables_.CalculateSize(_repeated_playerVariables_codec);
            return size;
        }

        public void MergeFrom(GetPlayerVariablesResponse other)
        {
            if (other == null)
            {
                return;
            }
            playerVariables_.Add(other.playerVariables_);
        }

        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                        {
                            playerVariables_.AddEntriesFrom(input, _repeated_playerVariables_codec);
                            break;
                        }
                }
            }
        }

    }

    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class GameAccountOnlineNotification : pb::IMessage<GameAccountOnlineNotification>
    {
        private static readonly pb::MessageParser<GameAccountOnlineNotification> _parser = new pb::MessageParser<GameAccountOnlineNotification>(() => new GameAccountOnlineNotification());
        public static pb::MessageParser<GameAccountOnlineNotification> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor
        {
            get { return Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[7]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        public GameAccountOnlineNotification()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        public GameAccountOnlineNotification(GameAccountOnlineNotification other) : this()
        {
            GameAccountId = other.gameAccountId_ != null ? other.GameAccountId.Clone() : null;
            Host = other.host_ != null ? other.Host.Clone() : null;
            sessionId_ = other.sessionId_;
        }

        public GameAccountOnlineNotification Clone()
        {
            return new GameAccountOnlineNotification(this);
        }

        /// <summary>Field number for the "game_account_id" field.</summary>
        public const int GameAccountIdFieldNumber = 1;
        private Bgs.Protocol.EntityId gameAccountId_;
        public Bgs.Protocol.EntityId GameAccountId
        {
            get { return gameAccountId_; }
            set
            {
                gameAccountId_ = value;
            }
        }

        /// <summary>Field number for the "host" field.</summary>
        public const int HostFieldNumber = 2;
        private Bgs.Protocol.ProcessId host_;
        public Bgs.Protocol.ProcessId Host
        {
            get { return host_; }
            set
            {
                host_ = value;
            }
        }

        /// <summary>Field number for the "session_id" field.</summary>
        public const int SessionIdFieldNumber = 3;
        private string sessionId_ = "";
        public string SessionId
        {
            get { return sessionId_; }
            set
            {
                sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        public override bool Equals(object other)
        {
            return Equals(other as GameAccountOnlineNotification);
        }

        public bool Equals(GameAccountOnlineNotification other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(GameAccountId, other.GameAccountId)) return false;
            if (!object.Equals(Host, other.Host)) return false;
            if (SessionId != other.SessionId) return false;
            return true;
        }

        public override int GetHashCode()
        {
            int hash = 1;
            if (gameAccountId_ != null) hash ^= GameAccountId.GetHashCode();
            if (host_ != null) hash ^= Host.GetHashCode();
            if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
            return hash;
        }

        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output)
        {
            if (gameAccountId_ != null)
            {
                output.WriteRawTag(10);
                output.WriteMessage(GameAccountId);
            }
            if (host_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(Host);
            }
            if (SessionId.Length != 0)
            {
                output.WriteRawTag(26);
                output.WriteString(SessionId);
            }
        }

        public int CalculateSize()
        {
            int size = 0;
            if (gameAccountId_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameAccountId);
            }
            if (host_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Host);
            }
            if (SessionId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
            }
            return size;
        }

        public void MergeFrom(GameAccountOnlineNotification other)
        {
            if (other == null)
            {
                return;
            }
            if (other.gameAccountId_ != null)
            {
                if (gameAccountId_ == null)
                {
                    gameAccountId_ = new Bgs.Protocol.EntityId();
                }
                GameAccountId.MergeFrom(other.GameAccountId);
            }
            if (other.host_ != null)
            {
                if (host_ == null)
                {
                    host_ = new Bgs.Protocol.ProcessId();
                }
                Host.MergeFrom(other.Host);
            }
            if (other.SessionId.Length != 0)
            {
                SessionId = other.SessionId;
            }
        }

        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                        {
                            if (gameAccountId_ == null)
                            {
                                gameAccountId_ = new Bgs.Protocol.EntityId();
                            }
                            input.ReadMessage(gameAccountId_);
                            break;
                        }
                    case 18:
                        {
                            if (host_ == null)
                            {
                                host_ = new Bgs.Protocol.ProcessId();
                            }
                            input.ReadMessage(host_);
                            break;
                        }
                    case 26:
                        {
                            SessionId = input.ReadString();
                            break;
                        }
                }
            }
        }

    }

    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class GameAccountOfflineNotification : pb::IMessage<GameAccountOfflineNotification>
    {
        private static readonly pb::MessageParser<GameAccountOfflineNotification> _parser = new pb::MessageParser<GameAccountOfflineNotification>(() => new GameAccountOfflineNotification());
        public static pb::MessageParser<GameAccountOfflineNotification> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor
        {
            get { return Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[8]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        public GameAccountOfflineNotification()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        public GameAccountOfflineNotification(GameAccountOfflineNotification other) : this()
        {
            GameAccountId = other.gameAccountId_ != null ? other.GameAccountId.Clone() : null;
            Host = other.host_ != null ? other.Host.Clone() : null;
            sessionId_ = other.sessionId_;
        }

        public GameAccountOfflineNotification Clone()
        {
            return new GameAccountOfflineNotification(this);
        }

        /// <summary>Field number for the "game_account_id" field.</summary>
        public const int GameAccountIdFieldNumber = 1;
        private Bgs.Protocol.EntityId gameAccountId_;
        public Bgs.Protocol.EntityId GameAccountId
        {
            get { return gameAccountId_; }
            set
            {
                gameAccountId_ = value;
            }
        }

        /// <summary>Field number for the "host" field.</summary>
        public const int HostFieldNumber = 2;
        private Bgs.Protocol.ProcessId host_;
        public Bgs.Protocol.ProcessId Host
        {
            get { return host_; }
            set
            {
                host_ = value;
            }
        }

        /// <summary>Field number for the "session_id" field.</summary>
        public const int SessionIdFieldNumber = 3;
        private string sessionId_ = "";
        public string SessionId
        {
            get { return sessionId_; }
            set
            {
                sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        public override bool Equals(object other)
        {
            return Equals(other as GameAccountOfflineNotification);
        }

        public bool Equals(GameAccountOfflineNotification other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(GameAccountId, other.GameAccountId)) return false;
            if (!object.Equals(Host, other.Host)) return false;
            if (SessionId != other.SessionId) return false;
            return true;
        }

        public override int GetHashCode()
        {
            int hash = 1;
            if (gameAccountId_ != null) hash ^= GameAccountId.GetHashCode();
            if (host_ != null) hash ^= Host.GetHashCode();
            if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
            return hash;
        }

        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output)
        {
            if (gameAccountId_ != null)
            {
                output.WriteRawTag(10);
                output.WriteMessage(GameAccountId);
            }
            if (host_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(Host);
            }
            if (SessionId.Length != 0)
            {
                output.WriteRawTag(26);
                output.WriteString(SessionId);
            }
        }

        public int CalculateSize()
        {
            int size = 0;
            if (gameAccountId_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameAccountId);
            }
            if (host_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Host);
            }
            if (SessionId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
            }
            return size;
        }

        public void MergeFrom(GameAccountOfflineNotification other)
        {
            if (other == null)
            {
                return;
            }
            if (other.gameAccountId_ != null)
            {
                if (gameAccountId_ == null)
                {
                    gameAccountId_ = new Bgs.Protocol.EntityId();
                }
                GameAccountId.MergeFrom(other.GameAccountId);
            }
            if (other.host_ != null)
            {
                if (host_ == null)
                {
                    host_ = new Bgs.Protocol.ProcessId();
                }
                Host.MergeFrom(other.Host);
            }
            if (other.SessionId.Length != 0)
            {
                SessionId = other.SessionId;
            }
        }

        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                        {
                            if (gameAccountId_ == null)
                            {
                                gameAccountId_ = new Bgs.Protocol.EntityId();
                            }
                            input.ReadMessage(gameAccountId_);
                            break;
                        }
                    case 18:
                        {
                            if (host_ == null)
                            {
                                host_ = new Bgs.Protocol.ProcessId();
                            }
                            input.ReadMessage(host_);
                            break;
                        }
                    case 26:
                        {
                            SessionId = input.ReadString();
                            break;
                        }
                }
            }
        }

    }

    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class GetAchievementsFileRequest : pb::IMessage<GetAchievementsFileRequest>
    {
        private static readonly pb::MessageParser<GetAchievementsFileRequest> _parser = new pb::MessageParser<GetAchievementsFileRequest>(() => new GetAchievementsFileRequest());
        public static pb::MessageParser<GetAchievementsFileRequest> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor
        {
            get { return Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[9]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        public GetAchievementsFileRequest()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        public GetAchievementsFileRequest(GetAchievementsFileRequest other) : this()
        {
            Host = other.host_ != null ? other.Host.Clone() : null;
        }

        public GetAchievementsFileRequest Clone()
        {
            return new GetAchievementsFileRequest(this);
        }

        /// <summary>Field number for the "host" field.</summary>
        public const int HostFieldNumber = 1;
        private Bgs.Protocol.ProcessId host_;
        public Bgs.Protocol.ProcessId Host
        {
            get { return host_; }
            set
            {
                host_ = value;
            }
        }

        public override bool Equals(object other)
        {
            return Equals(other as GetAchievementsFileRequest);
        }

        public bool Equals(GetAchievementsFileRequest other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(Host, other.Host)) return false;
            return true;
        }

        public override int GetHashCode()
        {
            int hash = 1;
            if (host_ != null) hash ^= Host.GetHashCode();
            return hash;
        }

        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output)
        {
            if (host_ != null)
            {
                output.WriteRawTag(10);
                output.WriteMessage(Host);
            }
        }

        public int CalculateSize()
        {
            int size = 0;
            if (host_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Host);
            }
            return size;
        }

        public void MergeFrom(GetAchievementsFileRequest other)
        {
            if (other == null)
            {
                return;
            }
            if (other.host_ != null)
            {
                if (host_ == null)
                {
                    host_ = new Bgs.Protocol.ProcessId();
                }
                Host.MergeFrom(other.Host);
            }
        }

        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                        {
                            if (host_ == null)
                            {
                                host_ = new Bgs.Protocol.ProcessId();
                            }
                            input.ReadMessage(host_);
                            break;
                        }
                }
            }
        }

    }

    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class GetAchievementsFileResponse : pb::IMessage<GetAchievementsFileResponse>
    {
        private static readonly pb::MessageParser<GetAchievementsFileResponse> _parser = new pb::MessageParser<GetAchievementsFileResponse>(() => new GetAchievementsFileResponse());
        public static pb::MessageParser<GetAchievementsFileResponse> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor
        {
            get { return Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[10]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        public GetAchievementsFileResponse()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        public GetAchievementsFileResponse(GetAchievementsFileResponse other) : this()
        {
            ContentHandle = other.contentHandle_ != null ? other.ContentHandle.Clone() : null;
        }

        public GetAchievementsFileResponse Clone()
        {
            return new GetAchievementsFileResponse(this);
        }

        /// <summary>Field number for the "content_handle" field.</summary>
        public const int ContentHandleFieldNumber = 1;
        private Bgs.Protocol.ContentHandle contentHandle_;
        public Bgs.Protocol.ContentHandle ContentHandle
        {
            get { return contentHandle_; }
            set
            {
                contentHandle_ = value;
            }
        }

        public override bool Equals(object other)
        {
            return Equals(other as GetAchievementsFileResponse);
        }

        public bool Equals(GetAchievementsFileResponse other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(ContentHandle, other.ContentHandle)) return false;
            return true;
        }

        public override int GetHashCode()
        {
            int hash = 1;
            if (contentHandle_ != null) hash ^= ContentHandle.GetHashCode();
            return hash;
        }

        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output)
        {
            if (contentHandle_ != null)
            {
                output.WriteRawTag(10);
                output.WriteMessage(ContentHandle);
            }
        }

        public int CalculateSize()
        {
            int size = 0;
            if (contentHandle_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContentHandle);
            }
            return size;
        }

        public void MergeFrom(GetAchievementsFileResponse other)
        {
            if (other == null)
            {
                return;
            }
            if (other.contentHandle_ != null)
            {
                if (contentHandle_ == null)
                {
                    contentHandle_ = new Bgs.Protocol.ContentHandle();
                }
                ContentHandle.MergeFrom(other.ContentHandle);
            }
        }

        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                        {
                            if (contentHandle_ == null)
                            {
                                contentHandle_ = new Bgs.Protocol.ContentHandle();
                            }
                            input.ReadMessage(contentHandle_);
                            break;
                        }
                }
            }
        }

    }

    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class GetAllValuesForAttributeRequest : pb::IMessage<GetAllValuesForAttributeRequest>
    {
        private static readonly pb::MessageParser<GetAllValuesForAttributeRequest> _parser = new pb::MessageParser<GetAllValuesForAttributeRequest>(() => new GetAllValuesForAttributeRequest());
        public static pb::MessageParser<GetAllValuesForAttributeRequest> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor
        {
            get { return Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[11]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        public GetAllValuesForAttributeRequest()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        public GetAllValuesForAttributeRequest(GetAllValuesForAttributeRequest other) : this()
        {
            attributeKey_ = other.attributeKey_;
            AgentId = other.agentId_ != null ? other.AgentId.Clone() : null;
            program_ = other.program_;
        }

        public GetAllValuesForAttributeRequest Clone()
        {
            return new GetAllValuesForAttributeRequest(this);
        }

        /// <summary>Field number for the "attribute_key" field.</summary>
        public const int AttributeKeyFieldNumber = 1;
        private string attributeKey_ = "";
        public string AttributeKey
        {
            get { return attributeKey_; }
            set
            {
                attributeKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "agent_id" field.</summary>
        public const int AgentIdFieldNumber = 2;
        private Bgs.Protocol.EntityId agentId_;
        public Bgs.Protocol.EntityId AgentId
        {
            get { return agentId_; }
            set
            {
                agentId_ = value;
            }
        }

        /// <summary>Field number for the "program" field.</summary>
        public const int ProgramFieldNumber = 5;
        private uint program_;
        public uint Program
        {
            get { return program_; }
            set
            {
                program_ = value;
            }
        }

        public override bool Equals(object other)
        {
            return Equals(other as GetAllValuesForAttributeRequest);
        }

        public bool Equals(GetAllValuesForAttributeRequest other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (AttributeKey != other.AttributeKey) return false;
            if (!object.Equals(AgentId, other.AgentId)) return false;
            if (Program != other.Program) return false;
            return true;
        }

        public override int GetHashCode()
        {
            int hash = 1;
            if (AttributeKey.Length != 0) hash ^= AttributeKey.GetHashCode();
            if (agentId_ != null) hash ^= AgentId.GetHashCode();
            if (Program != 0) hash ^= Program.GetHashCode();
            return hash;
        }

        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output)
        {
            if (AttributeKey.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(AttributeKey);
            }
            if (agentId_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(AgentId);
            }
            if (Program != 0)
            {
                output.WriteRawTag(45);
                output.WriteFixed32(Program);
            }
        }

        public int CalculateSize()
        {
            int size = 0;
            if (AttributeKey.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(AttributeKey);
            }
            if (agentId_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
            }
            if (Program != 0)
            {
                size += 1 + 4;
            }
            return size;
        }

        public void MergeFrom(GetAllValuesForAttributeRequest other)
        {
            if (other == null)
            {
                return;
            }
            if (other.AttributeKey.Length != 0)
            {
                AttributeKey = other.AttributeKey;
            }
            if (other.agentId_ != null)
            {
                if (agentId_ == null)
                {
                    agentId_ = new Bgs.Protocol.EntityId();
                }
                AgentId.MergeFrom(other.AgentId);
            }
            if (other.Program != 0)
            {
                Program = other.Program;
            }
        }

        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                        {
                            AttributeKey = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            if (agentId_ == null)
                            {
                                agentId_ = new Bgs.Protocol.EntityId();
                            }
                            input.ReadMessage(agentId_);
                            break;
                        }
                    case 45:
                        {
                            Program = input.ReadFixed32();
                            break;
                        }
                }
            }
        }

    }

    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class GetAllValuesForAttributeResponse : pb::IMessage<GetAllValuesForAttributeResponse>
    {
        private static readonly pb::MessageParser<GetAllValuesForAttributeResponse> _parser = new pb::MessageParser<GetAllValuesForAttributeResponse>(() => new GetAllValuesForAttributeResponse());
        public static pb::MessageParser<GetAllValuesForAttributeResponse> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor
        {
            get { return Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[12]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        public GetAllValuesForAttributeResponse()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        public GetAllValuesForAttributeResponse(GetAllValuesForAttributeResponse other) : this()
        {
            attributeValue_ = other.attributeValue_.Clone();
        }

        public GetAllValuesForAttributeResponse Clone()
        {
            return new GetAllValuesForAttributeResponse(this);
        }

        /// <summary>Field number for the "attribute_value" field.</summary>
        public const int AttributeValueFieldNumber = 1;
        private static readonly pb::FieldCodec<Bgs.Protocol.Variant> _repeated_attributeValue_codec
            = pb::FieldCodec.ForMessage(10, Bgs.Protocol.Variant.Parser);
        private readonly pbc::RepeatedField<Bgs.Protocol.Variant> attributeValue_ = new pbc::RepeatedField<Bgs.Protocol.Variant>();
        public pbc::RepeatedField<Bgs.Protocol.Variant> AttributeValue
        {
            get { return attributeValue_; }
        }

        public override bool Equals(object other)
        {
            return Equals(other as GetAllValuesForAttributeResponse);
        }

        public bool Equals(GetAllValuesForAttributeResponse other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!attributeValue_.Equals(other.attributeValue_)) return false;
            return true;
        }

        public override int GetHashCode()
        {
            int hash = 1;
            hash ^= attributeValue_.GetHashCode();
            return hash;
        }

        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output)
        {
            attributeValue_.WriteTo(output, _repeated_attributeValue_codec);
        }

        public int CalculateSize()
        {
            int size = 0;
            size += attributeValue_.CalculateSize(_repeated_attributeValue_codec);
            return size;
        }

        public void MergeFrom(GetAllValuesForAttributeResponse other)
        {
            if (other == null)
            {
                return;
            }
            attributeValue_.Add(other.attributeValue_);
        }

        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                        {
                            attributeValue_.AddEntriesFrom(input, _repeated_attributeValue_codec);
                            break;
                        }
                }
            }
        }

    }

    #endregion
}

#endregion Designer generated code
