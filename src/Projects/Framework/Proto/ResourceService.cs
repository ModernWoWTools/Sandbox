// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bgs/low/pb/client/resource_service.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = Google.Protobuf;
using pbr = Google.Protobuf.Reflection;
namespace Bgs.Protocol.Resources.V1
{

    /// <summary>Holder for reflection information generated from bgs/low/pb/client/resource_service.proto</summary>
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class ResourceServiceReflection
    {

        #region Descriptor
        /// <summary>File descriptor for bgs/low/pb/client/resource_service.proto</summary>
        public static pbr::FileDescriptor Descriptor
        {
            get { return descriptor; }
        }
        private static pbr::FileDescriptor descriptor;

        static ResourceServiceReflection()
        {
            byte[] descriptorData = System.Convert.FromBase64String(
                string.Concat(
                  "CihiZ3MvbG93L3BiL2NsaWVudC9yZXNvdXJjZV9zZXJ2aWNlLnByb3RvEhli",
                  "Z3MucHJvdG9jb2wucmVzb3VyY2VzLnYxGixiZ3MvbG93L3BiL2NsaWVudC9j",
                  "b250ZW50X2hhbmRsZV90eXBlcy5wcm90bxohYmdzL2xvdy9wYi9jbGllbnQv",
                  "cnBjX3R5cGVzLnByb3RvIkgKFENvbnRlbnRIYW5kbGVSZXF1ZXN0Eg8KB3By",
                  "b2dyYW0YASABKAcSDgoGc3RyZWFtGAIgASgHEg8KB3ZlcnNpb24YAyABKAcy",
                  "dAoQUmVzb3VyY2VzU2VydmljZRJgChBHZXRDb250ZW50SGFuZGxlEi8uYmdz",
                  "LnByb3RvY29sLnJlc291cmNlcy52MS5Db250ZW50SGFuZGxlUmVxdWVzdBob",
                  "LmJncy5wcm90b2NvbC5Db250ZW50SGFuZGxlQgVIAoABAGIGcHJvdG8z"));
            descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
                new pbr::FileDescriptor[] { Bgs.Protocol.ContentHandleTypesReflection.Descriptor, Bgs.Protocol.RpcTypesReflection.Descriptor, },
                new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(Bgs.Protocol.Resources.V1.ContentHandleRequest), Bgs.Protocol.Resources.V1.ContentHandleRequest.Parser, new[]{ "Program", "Stream", "Version" }, null, null, null)
                }));
        }
        #endregion

    }
    #region Messages
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class ContentHandleRequest : pb::IMessage<ContentHandleRequest>
    {
        private static readonly pb::MessageParser<ContentHandleRequest> _parser = new pb::MessageParser<ContentHandleRequest>(() => new ContentHandleRequest());
        public static pb::MessageParser<ContentHandleRequest> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor
        {
            get { return Bgs.Protocol.Resources.V1.ResourceServiceReflection.Descriptor.MessageTypes[0]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        public ContentHandleRequest()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        public ContentHandleRequest(ContentHandleRequest other) : this()
        {
            program_ = other.program_;
            stream_ = other.stream_;
            version_ = other.version_;
        }

        public ContentHandleRequest Clone()
        {
            return new ContentHandleRequest(this);
        }

        /// <summary>Field number for the "program" field.</summary>
        public const int ProgramFieldNumber = 1;
        private uint program_;
        public uint Program
        {
            get { return program_; }
            set
            {
                program_ = value;
            }
        }

        /// <summary>Field number for the "stream" field.</summary>
        public const int StreamFieldNumber = 2;
        private uint stream_;
        public uint Stream
        {
            get { return stream_; }
            set
            {
                stream_ = value;
            }
        }

        /// <summary>Field number for the "version" field.</summary>
        public const int VersionFieldNumber = 3;
        private uint version_;
        public uint Version
        {
            get { return version_; }
            set
            {
                version_ = value;
            }
        }

        public override bool Equals(object other)
        {
            return Equals(other as ContentHandleRequest);
        }

        public bool Equals(ContentHandleRequest other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Program != other.Program) return false;
            if (Stream != other.Stream) return false;
            if (Version != other.Version) return false;
            return true;
        }

        public override int GetHashCode()
        {
            int hash = 1;
            if (Program != 0) hash ^= Program.GetHashCode();
            if (Stream != 0) hash ^= Stream.GetHashCode();
            if (Version != 0) hash ^= Version.GetHashCode();
            return hash;
        }

        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Program != 0)
            {
                output.WriteRawTag(13);
                output.WriteFixed32(Program);
            }
            if (Stream != 0)
            {
                output.WriteRawTag(21);
                output.WriteFixed32(Stream);
            }
            if (Version != 0)
            {
                output.WriteRawTag(29);
                output.WriteFixed32(Version);
            }
        }

        public int CalculateSize()
        {
            int size = 0;
            if (Program != 0)
            {
                size += 1 + 4;
            }
            if (Stream != 0)
            {
                size += 1 + 4;
            }
            if (Version != 0)
            {
                size += 1 + 4;
            }
            return size;
        }

        public void MergeFrom(ContentHandleRequest other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Program != 0)
            {
                Program = other.Program;
            }
            if (other.Stream != 0)
            {
                Stream = other.Stream;
            }
            if (other.Version != 0)
            {
                Version = other.Version;
            }
        }

        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 13:
                        {
                            Program = input.ReadFixed32();
                            break;
                        }
                    case 21:
                        {
                            Stream = input.ReadFixed32();
                            break;
                        }
                    case 29:
                        {
                            Version = input.ReadFixed32();
                            break;
                        }
                }
            }
        }

    }

    #endregion

}

#endregion Designer generated code
